# -*- coding: utf-8 -*-
"""Estatistica.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AcLCxJKRqrFvw9l35EZ1EjNfwaxeWoeW

# Medidas de posição:
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

# Carregando a planilha
df = pd.read_csv('/content/drive/MyDrive/Databases/BTC_BD.csv')

# Exibir as primeiras linhas para verificar o carregamento correto
print(df.head())

#Função para calcular as medidas de posição
def calcular_medidas(df):
    medidas = pd.DataFrame()
    medidas['Moda'] = df.mode().iloc[0]
    medidas['Média'] = df.mean().round(2)
    medidas['Mediana'] = df.median().round(2)
    return medidas

# Selecionar as colunas de interesse
colunas_interesse = ['Open', 'High', 'Low', 'Close', 'Volume', 'VIX']

# Calcular e exibir as medidas
medidas = calcular_medidas(df[colunas_interesse])

# Exibir a tabela de medidas
from IPython.display import display
display(medidas)

# Passo 1: Instalar as bibliotecas necessárias (necessário apenas uma vez)
!pip install openpyxl matplotlib seaborn

# Passo 2: Importar pandas, matplotlib e seaborn
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Passo 3: Carregar a planilha
df = pd.read_csv('/content/drive/MyDrive/Databases/BTC_DB.csv')  # Substitua '/content/seu_arquivo.xlsx' pelo nome correto do seu arquivo

# Exibir as primeiras linhas para verificar o carregamento correto
print(df.head())

# Passo 4: Calcular os quartis
def calcular_quartis(df):
    quartis = pd.DataFrame()
    quartis['Q1'] = df.quantile(0.25).round(2)
    quartis['Q2 (Mediana)'] = df.quantile(0.50).round(2)
    quartis['Q3'] = df.quantile(0.75).round(2)
    return quartis

# Selecionar as colunas de interesse
colunas_interesse = ['Open', 'High', 'Low', 'Close', 'Volume', 'VIX']

# Calcular e exibir os quartis
quartis = calcular_quartis(df[colunas_interesse])
print(quartis)

# Passo 5: Gerar boxplots separados
for coluna in colunas_interesse:
    plt.figure(figsize=(6, 4))
    sns.boxplot(y=df[coluna])
    plt.title(coluna)
    plt.ylabel('Valores')
    # Salvar cada figura como uma imagem separada
    plt.savefig(f'{coluna}_boxplot.png')
    plt.show()

"""#Medidas de dispersão:"""

# Passo 1: Instalar as bibliotecas necessárias (necessário apenas uma vez)
!pip install openpyxl

# Passo 2: Importar pandas
import pandas as pd

# Passo 3: Carregar a planilha
df = pd.read_excel('/content/drive/MyDrive/Databases/BTC_DB.csv')

# Exibir as primeiras linhas para verificar o carregamento correto
print(df.head())

# Passo 4: Calcular as medidas de dispersão
def calcular_medidas_dispersao(df):
    dispersao = pd.DataFrame()
    dispersao['Amplitude'] = df.max() - df.min()
    dispersao['Intervalo Interquartil (IQR)'] = df.quantile(0.75) - df.quantile(0.25)
    dispersao['Variância'] = df.var().round(2)
    dispersao['Desvio Padrão'] = df.std().round(2)
    dispersao['Coeficiente de Variação (%)'] = (df.std() / df.mean() * 100).round(2)
    return dispersao

# Selecionar as colunas de interesse
colunas_interesse = ['Open', 'High', 'Low', 'Close', 'Volume', 'VIX']

# Calcular e exibir as medidas de dispersão
medidas_dispersao = calcular_medidas_dispersao(df[colunas_interesse])
print(medidas_dispersao)

# Exibir a tabela de medidas de dispersão
from IPython.display import display
display(medidas_dispersao)